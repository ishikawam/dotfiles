#!/bin/sh

# @todo; これ見直そう。。sudo使うのは分離。実行するかどうかは設定ファイルみて個別で判定したい。npmもやっちゃダメな気がするけどどうかな、-gだといいっていう運用にすればいいかも

has_cmd() {
    command -v "$1" >/dev/null 2>&1
}

has_sudo() {
    ! sudo -n true 2>&1 | grep -q "Permission denied"
}

if has_cmd gsed; then
    alias sed='gsed'
fi

if has_sudo; then
    echo sudo権限あり
else
    echo sudo権限なし
fi

# gem
if has_sudo && has_cmd gem && has_cmd rbenv; then
    CURRENT_RUBY_VERSION=$(rbenv version-name)
    if [ "$CURRENT_RUBY_VERSION" != "system" ]; then
        echo "# gem"
        sudo gem update --system
        sudo gem update
        sudo gem install bundler xcpretty
    fi
fi

# homebrew
# setup.shでも
if has_cmd brew; then
#if [ -x "`which  brew 2>/dev/null`" ]; then
    echo "# homebrew"
    brew update
    brew upgrade
    brew upgrade --cask
fi

# npm
if has_cmd npm; then
    echo "# npm"
    npm -g update
fi

# # emacs cask
# if [ -x "`which cask 2>/dev/null`" ]; then
#     echo emacs cask
#     cd ~/.emacs.d/ ; cask install ; cd -
# fi

# emacs straight
# caskは一旦使用中止してみる
#rm -rf ~/.emacs.d/straight/ ~/.emacs.d/.cask/
echo "# emacs straight.el"
rm -rf ~/.emacs.d/.cask/
emacs --batch -l ~/.emacs.d/init.el --eval="(progn
             (straight-pull-all)
             (straight-check-all))"

# yum
if has_sudo && has_cmd yum; then
    echo "# yum"
    sudo yum update
fi

# apt
if has_sudo && has_cmd apt-get; then
    echo "# apt"
    sudo apt-get update
    sudo apt-get upgrade
fi

# pear
# pear upgrade-all

# nvm バージョン上げたいとき
# nvm install stable
# nvm alias default stable
# あとは ll .nvm/v*/**//lib/node_modules/ とかで使ってたglobal modulesをインストールする。
# 例) npm install -g bower coffee-script grunt-cli ricoh-theta yslow

# python2.6以上に依存＞cask
# pyenv install 2.7.9

